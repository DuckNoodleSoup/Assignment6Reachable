ASSIGNMENT 6 REACHABLE

12-April
 - Made Adjacency Matrix
 - Added addEdge, removeEdge, sets coordinates i,j j,i to true or false
 - Added removeEdge, returns [i][j]
 - Added List implementation of FIFO Queue to return out - in edges in Graph Class

 For Next
 - Finish List Implementations
 - Finish Out and In Edges
 - Start working on reachable

16-April
 - List implements Hash Table, out-in Edges creates new List
 - List takes in integer, number of vertices, to see how many items in the table to create
 - ListNode now has int storage, next node
 - Graph.outEdges goes through graph[i][a] (for loop), and adds "a" if true, returns List
 - List now has 'Hash' method, uses key%17 to create hash
 - List.add method loops through hash address's linked list until next==null
 - Graph.inEdges goes through graph[a][i] (for loop), and adds 'a' if true, returns list

 For Next
 - Start working on Reachable, BFS, DFS? look at implementations.

17-April
  - Graph.reachable Implementing Depth First Search
  - Creating Stack and StackNode for the Depth First Search
  - Added print method to List.java

  - Starting to test functionality:
    - Graph created,
    - Testing with graphTest();
  - List.print created, loops through 17 places, chains through linked lists
  -I just found out that our edges are directed lol oops
  - Deleted both directions for Graph.add, delete, find
  - List.print() fix: now prints once before the while loop so it prints head
  - Stack.push works
  - Stack.pop works

  For Next:
  - Implement Depth First Search in Graph, stack should work ok

20-April
 - Finally finished implementation of DFS, everything is in order.
 - Able to calculate test averages. 


  